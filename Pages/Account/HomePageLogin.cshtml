@page
@model FoodieAPII.Pages.Account.HomePageLoginModel
@{
	ViewData["HideLayoutHeader"] = true;

}



<div class="sticky-top bg-white shadow-sm" style="z-index:1030;">
	<div class="container sticky-top bd-white">
		<div class="header d-flex justify-content-between align-items-center py-3">
			<!-- Logo Section -->
			<div class="d-flex align-items-center">
				<img src="~/images/logo_foddie.jpg" alt="GrabFood Logo" style="height: 80px;">
				<div class="search-container flex-grow-1 mx-3">
					<span class="bi bi-search me-2"></span>
					<input type="text" class="search-input" placeholder="Địa điểm, món ăn" />
				</div>
			</div>

			<!-- Action Buttons Section -->
			<div class="d-flex align-items-center gap-3">
				<!-- Online Booking Button -->
				<a href="/Account/BookingTableOnline" class="btn btn-warning rounded-pill px-4 py-2">
					Đặt bàn Online
				</a>

				<!-- Cart Button -->
				<button class="btn btn-success rounded-circle d-flex justify-content-center align-items-center position-relative"
						style="width: 50px; height: 50px;" data-bs-toggle="modal">
					<a href="/Account/Cart"><i class="bi bi-cart3 fs-4 text-white"></i></a>
					<span id="cart-quantity-badge"
						  class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
						  style="font-size: 0.7em;">
						0
					</span>
				</button>

				<!-- User Profile Section -->
				<a href="/Account/User">
					<div class="d-flex flex-column align-items-center">
						<i class="bi bi-person-circle text-dark" style="font-size: 30px;"></i>
						<div class="fw-semibold text-dark mt-1">Nguyễn Văn A</div>
					</div>
				</a>
			</div>
		</div>
	</div>
</div>
<div id="carouselExampleDark" class="carousel carousel-dark slide" data-bs-ride="carousel">
	<div class="carousel-indicators">
		<button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
		<button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="1" aria-label="Slide 2"></button>
		<button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="2" aria-label="Slide 3"></button>
	</div>
	<div class="carousel-inner">
		<div class="carousel-item active" data-bs-interval="5000">
			<img src="~/images/banner-1.jpg" class="d-block w-100" alt="Slide 1">
			<div class="carousel-caption d-none d-md-block">
				
			</div>
		</div>
		<div class="carousel-item" data-bs-interval="5000">
			<img src="~/images/banner-2.jpg" class="d-block w-100" alt="Slide 2">
			<div class="carousel-caption d-none d-md-block">
				
			</div>
		</div>
		<div class="carousel-item">
			<img src="~/images/banner-3.jpg" class="d-block w-100" alt="Slide 3">
			<div class="carousel-caption d-none d-md-block">
				
			</div>
		</div>
	</div>
	<span class="visually-hidden">Previous</span>
	<span class="visually-hidden">Next</span>

</div>

<section class="container my-5">
	<h2 class="fw-bold mb-4">Bộ sưu tập món ăn</h2>

	<div id="foodCollectionCarousel" class="carousel slide" data-bs-ride="carousel">
		<div class="carousel-inner">
			<!-- Slide 1 -->
			<div class="carousel-item active">
				<div class="d-flex gap-3 justify-content-center">
					<div class="card border-0 shadow-sm food-card">
						<img src="~/images/banner-3.jpg" class="card-img-top food-card-img" alt="Đồ uống">
						<div class="card-img-overlay d-flex align-items-end">
							<h5 class="text-white fw-bold">Đồ uống</h5>
						</div>
					</div>
					<div class="card border-0 shadow-sm food-card" style="min-width: 200px;">
						<img src="~/images/banner-3.jpg" class="card-img-top food-card-img" alt="Thức Ăn Nhanh">
						<div class="card-img-overlay d-flex align-items-end">
							<h5 class="text-white fw-bold">Thức Ăn Nhanh</h5>
						</div>
					</div>
					<div class="card border-0 shadow-sm food-card" style="min-width: 200px;">
						<img src="~/images/banner-3.jpg" class="card-img-top food-card-img" alt="Món Á - Âu">
						<div class="card-img-overlay d-flex align-items-end">
							<h5 class="text-white fw-bold">Món Á - Âu</h5>
						</div>
					</div>
					<div class="card border-0 shadow-sm food-card" style="min-width: 200px;">
						<img src="~/images/banner-2.jpg" class="card-img-top food-card-img" alt="Món Á - Âu">
						<div class="card-img-overlay d-flex align-items-end">
							<h5 class="text-white fw-bold">Món Á - Âu</h5>
						</div>
					</div>
				</div>
			</div>

			<!-- Slide 2 -->
			<div class="carousel-item">
				<div class="d-flex gap-3 justify-content-center">
					<div class="card border-0 shadow-sm food-card" style="min-width: 200px;">
						<img src="~/images/banner-2.jpg" class="card-img-top food-card-img" alt="Cơm">
						<div class="card-img-overlay d-flex align-items-end">
							<h5 class="text-white fw-bold">Cơm</h5>
						</div>
					</div>
					<div class="card border-0 shadow-sm food-card" style="min-width: 200px;">
						<img src="~/images/banner-2.jpg" class="card-img-top food-card-img" alt="Phở">
						<div class="card-img-overlay d-flex align-items-end">
							<h5 class="text-white fw-bold">Phở</h5>
						</div>
					</div>
					<div class="card border-0 shadow-sm food-card" style="min-width: 200px;">
						<img src="~/images/banner-2.jpg" class="card-img-top food-card-img" alt="Bánh mì">
						<div class="card-img-overlay d-flex align-items-end">
							<h5 class="text-white fw-bold">Bánh mì</h5>
						</div>
					</div>
					<div class="card border-0 shadow-sm food-card" style="min-width: 200px;">
						<img src="~/images/banner-2.jpg" class="card-img-top food-card-img" alt="Bánh mì">
						<div class="card-img-overlay d-flex align-items-end">
							<h5 class="text-white fw-bold">Bánh mì</h5>
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- Nút chuyển trái/phải -->
		<button class="carousel-control-prev" type="button" data-bs-target="#foodCollectionCarousel" data-bs-slide="prev">
			<span class="carousel-control-prev-icon bg-dark rounded-circle p-2" aria-hidden="true"></span>
			<span class="visually-hidden">Trước</span>
		</button>
		<button class="carousel-control-next" type="button" data-bs-target="#foodCollectionCarousel" data-bs-slide="next">
			<span class="carousel-control-next-icon bg-dark rounded-circle p-2" aria-hidden="true"></span>
			<span class="visually-hidden">Tiếp</span>
		</button>
	</div>
</section>



<div class="container mt-4">
	<h3 class="fw-bold mb-4">Đồ nóng </h3>
	<div class="row" id="hot-food-container">
		<!-- Món nóng sẽ được load từ API -->
	</div>
	
	<h3 class="fw-bold mb-4">Đồ lạnh </h3>
	<div class="row" id="cold-food-container">
		<!-- Món lạnh sẽ được load từ API -->
	</div>

	<h3 class="fw-bold mb-4">Nước uống </h3>
	<div class="row" id="drinks-container">
		<!-- Nước uống sẽ được load từ API -->
	</div>
	
	<h3 class="fw-bold mb-4">Lẩu </h3>
	<div class="row" id="hotpot-container">
		<!-- Lẩu sẽ được load từ API -->
	</div>
</div>

<div class="text-center mt-3">
	<a href="/quanh-day" class="btn btn-outline-primary px-4 py-2 rounded-pill">
		Xem thêm
	</a>
</div>
<button id="scrollToTopBtn" class="btn btn-primary rounded-circle"
		style="position: fixed; bottom: 32px; right: 32px; width: 48px; height: 48px; display: none; z-index: 9999;">
	<i class="bi bi-arrow-up"></i>
</button>

<style>
	/* General Header and Search Input Styling */
	.header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 10px 24px;
	}

		.header img {
			height: 80px;
			margin-right: 20px;
		}

	.search-container {
		flex-grow: 1;
		display: flex;
		align-items: center;
		background-color: #f0f0f0;
		border-radius: 20px;
		padding: 5px 10px;
	}

	.search-input {
		border: none;
		background: transparent;
		outline: none;
		font-size: 16px;
		width: 100%;
		padding: 4px 0;
	}

	/* Button Styles */
	.btn-warning {
		background: linear-gradient(90deg, #ffbf2f, #ff9e3e);
		color: #222;
		font-weight: 600;
		border: none;
		padding: 10px 20px;
		border-radius: 25px;
		transition: background 0.3s, color 0.3s, transform 0.3s;
	}

		.btn-warning:hover {
			background: linear-gradient(90deg, #ffc107, #ff8800);
			color: white;
			transform: scale(1.05);
		}

	.btn-success {
		background: linear-gradient(90deg, #ffc107, #ff8800);
		color: white;
		font-weight: 600;
		border: none;
		border-radius: 50%;
		padding: 12px;
		position: relative;
	}

		.btn-success:hover {
			background: linear-gradient(90deg, #ff9800, #ff5722);
		}

	/* Card and Carousel Styles */
	.carousel-item img {
		width: 100%;
		height: auto;
		object-fit: cover;
		max-height: 600px;
	}

	.card-img-overlay {
		background: linear-gradient(to top, rgba(0,0,0,0.5), transparent);
		border-radius: 0.5rem;
	}

	.food-card {
		aspect-ratio: 1 / 1;
		width: 220px;
		max-width: 100%;
		border-radius: 0.5rem;
		overflow: hidden;
	}

	.food-card-img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		border-radius: inherit;
	}

	/* Add to Cart Button */
	.btn-add-to-cart-custom {
		background: linear-gradient(90deg, #ffbf2f, #ff9e3e);
		color: #222;
		border: none;
		border-radius: 22px;
		font-weight: 600;
		font-size: 14px;
		padding: 7px 20px 7px 15px;
		box-shadow: 0 3px 12px 0 rgba(255, 190, 50, 0.13);
		display: flex;
		align-items: center;
		gap: 5px;
		transition: background 0.2s, color 0.2s, box-shadow 0.2s, transform 0.18s;
		text-decoration: none;
	}

		.btn-add-to-cart-custom:hover {
			background: linear-gradient(90deg, #ffc107, #ff8800);
			color: #fff !important;
			box-shadow: 0 6px 20px 0 rgba(255, 180, 30, 0.18);
			transform: translateY(-2px) scale(1.04);
			text-decoration: none;
		}

	/* Carousel control button styles */
	.carousel-control-prev,
	.carousel-control-next {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		width: 40px;
		height: 40px;
		background-color: rgba(0,0,0,0.5);
		border-radius: 50%;
		z-index: 10;
	}

	.carousel-control-prev {
		left: -20px;
	}

	.carousel-control-next {
		right: -20px;
	}

	/* Cart quantity control buttons */
	.decrease-qty:hover {
		background-color: #dc3545 !important;
		color: white !important;
		transform: scale(1.1);
	}

	.increase-qty:hover {
		background-color: #198754 !important;
		color: white !important;
		transform: scale(1.1);
	}

	.decrease-qty, .increase-qty {
		transition: all 0.2s ease;
		border-width: 2px !important;
	}

	.quantity-badge {
		background: linear-gradient(45deg, #007bff, #0056b3) !important;
		box-shadow: 0 2px 4px rgba(0,123,255,0.3);
	}

</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	// API Config
	const menuApi = "/api/admin/menu-items";
	const token = localStorage.getItem('access_token');
	
	// Category IDs
	const categories = {
		hotFood: 'b74d406f-7390-41ce-952c-12ceb4374064',
		coldFood: 'a4871081-e9da-4d5b-9596-aaea4981183a', 
		drinks: '3eaf6dd5-5a69-4e56-a478-2b6f32ae456c',
		hotpot: '27d6d60b-2b06-4027-8094-6793936eb861'
	};

	document.addEventListener("DOMContentLoaded", async () => {
		const badge = document.getElementById("cart-quantity-badge");

		// Xóa localStorage cũ để tránh xung đột
		localStorage.removeItem('cartQuantity');

		// Cập nhật badge từ giỏ hàng hiện tại
		updateCartBadge();

		// Load dữ liệu từ API cho từng category
		await loadMenuItems();

		// Event listener cho nút thêm vào giỏ hàng
		$(document).on('click', '.add-to-cart-btn', function() {
			const productId = $(this).data('product-id');
			addToCart(productId);
		});

		// Event listener cho nút tăng số lượng
		$(document).on('click', '.increase-qty', function() {
			const productId = $(this).data('product-id');
			increaseQuantity(productId);
		});

		// Event listener cho nút giảm số lượng
		$(document).on('click', '.decrease-qty', function() {
			const productId = $(this).data('product-id');
			decreaseQuantity(productId);
		});
	});

	// Load menu items by category
	async function loadMenuItems() {
		try {
			// Load hot food
			await loadItemsByCategory('hotFood', '#hot-food-container');
			// Load cold food
			await loadItemsByCategory('coldFood', '#cold-food-container');
			// Load drinks
			await loadItemsByCategory('drinks', '#drinks-container');
			// Load hotpot
			await loadItemsByCategory('hotpot', '#hotpot-container');
		} catch (error) {
			console.error('Error loading menu items:', error);
		}
	}

	// Load items by specific category
	async function loadItemsByCategory(categoryKey, containerId) {
		const categoryId = categories[categoryKey];
		const params = new URLSearchParams();
		params.append('categoryId', categoryId);
		params.append('isAvailable', 'true'); // Chỉ lấy món còn

		// Show loading spinner
		$(containerId).html(`
			<div class="col-12 text-center py-4">
				<div class="spinner-border text-primary" role="status">
					<span class="visually-hidden">Đang tải...</span>
				</div>
				<p class="mt-2 text-muted">Đang tải món ăn...</p>
			</div>
		`);

		try {
			const response = await fetch(`${menuApi}?${params.toString()}`, {
				headers: {
					'Authorization': `Bearer ${token}`,
					'Content-Type': 'application/json'
				}
			});
			
			if (!response.ok) {
				throw new Error(`HTTP error! status: ${response.status}`);
			}
			
			const data = await response.json();
			const items = data.data?.items || data.items || [];
			
			renderMenuItems(items, containerId);
		} catch (error) {
			console.error(`Error loading ${categoryKey}:`, error);
			// Show fallback message
			$(containerId).html(`
				<div class="col-12 text-center">
					<div class="alert alert-warning" role="alert">
						<i class="bi bi-exclamation-triangle"></i>
						Không thể tải danh sách món ăn. Vui lòng thử lại sau.
					</div>
				</div>
			`);
		}
	}

	// Render menu items to container
	function renderMenuItems(items, containerId) {
		const container = $(containerId);
		container.empty();
		
		if (!items || items.length === 0) {
			container.html(`
				<div class="col-12 text-center">
					<p class="text-muted">Chưa có món ăn nào trong danh mục này.</p>
				</div>
			`);
			return;
		}

		items.forEach(item => {
			const itemHtml = createMenuItemHtml(item);
			container.append(itemHtml);
		});
	}

	// Cart Management Functions
	function getCart() {
		const cartData = localStorage.getItem('shoppingCart');
		return cartData ? JSON.parse(cartData) : {};
	}

	function saveCart(cart) {
		localStorage.setItem('shoppingCart', JSON.stringify(cart));
		updateCartBadge();
	}

	function addToCart(productId) {
		const cart = getCart();
		cart[productId] = (cart[productId] || 0) + 1;
		saveCart(cart);
		refreshCartButtons();
		showCartAnimation();
	}

	function increaseQuantity(productId) {
		const cart = getCart();
		cart[productId] = (cart[productId] || 0) + 1;
		saveCart(cart);
		refreshCartButtons();
		showCartAnimation();
	}

	function decreaseQuantity(productId) {
		const cart = getCart();
		if (cart[productId] && cart[productId] > 1) {
			cart[productId]--;
		} else {
			delete cart[productId];
		}
		saveCart(cart);
		refreshCartButtons();
		showCartAnimation();
	}

	function getItemQuantity(productId) {
		const cart = getCart();
		return cart[productId] || 0;
	}

	function updateCartBadge() {
		const cart = getCart();
		const totalQuantity = Object.values(cart).reduce((sum, qty) => sum + qty, 0);
		document.getElementById('cart-quantity-badge').textContent = totalQuantity;
	}

	function showCartAnimation() {
		const badge = document.getElementById('cart-quantity-badge');
		badge.classList.add('animate__animated', 'animate__tada');
		setTimeout(() => badge.classList.remove('animate__animated', 'animate__tada'), 600);
	}

	function refreshCartButtons() {
		// Update cart buttons for all items without re-fetching data
		$('.card-body').each(function() {
			const cardBody = $(this);
			
			// Find any button with product-id in this card
			const existingBtn = cardBody.find('[data-product-id]').first();
			if (!existingBtn.length) return;
			
			const productId = existingBtn.data('product-id');
			const quantity = getItemQuantity(productId);
			
			// Remove all existing cart-related elements
			cardBody.find('.add-to-cart-btn').remove();
			cardBody.find('.decrease-qty').closest('div.position-absolute').remove();

			// Generate new cart button HTML
			let cartButtonHtml;
			if (quantity > 0) {
				cartButtonHtml = `
					<div class="position-absolute d-flex align-items-center" style="right: 14px; bottom: 10px;">
						<button class="btn btn-outline-danger btn-sm decrease-qty me-1" data-product-id="${productId}"
								style="width: 30px; height: 30px; padding: 0; border-radius: 50%;">
							<i class="bi bi-dash"></i>
						</button>
						<span class="badge bg-primary quantity-badge mx-1" style="font-size: 12px; min-width: 25px;">${quantity}</span>
						<button class="btn btn-outline-success btn-sm increase-qty ms-1" data-product-id="${productId}"
								style="width: 30px; height: 30px; padding: 0; border-radius: 50%;">
							<i class="bi bi-plus"></i>
						</button>
					</div>
				`;
			} else {
				cartButtonHtml = `
					<button class="btn btn-add-to-cart-custom position-absolute add-to-cart-btn"
							style="right: 14px; bottom: 10px;" data-product-id="${productId}">
						<i class="bi bi-cart-plus me-1"></i> Thêm vào giỏ
					</button>
				`;
			}

			// Add the new button
			cardBody.append(cartButtonHtml);
		});
	}

	// Create HTML for a menu item
	function createMenuItemHtml(item) {
		const defaultImage = '/images/banner-1.jpg';
		const imageUrl = item.imageUrl && item.imageUrl.trim() ? item.imageUrl : defaultImage;
		const price = item.price || 0;
		const formattedPrice = price.toLocaleString('vi-VN', {style:'currency', currency:'VND'});
		const quantity = getItemQuantity(item.id);

		// Generate cart button based on quantity
		let cartButtonHtml;
		if (quantity > 0) {
			cartButtonHtml = `
				<div class="position-absolute d-flex align-items-center" style="right: 14px; bottom: 10px;">
					<button class="btn btn-outline-danger btn-sm decrease-qty me-1" data-product-id="${item.id}"
							style="width: 30px; height: 30px; padding: 0; border-radius: 50%;">
						<i class="bi bi-dash"></i>
					</button>
					<span class="badge bg-primary quantity-badge mx-1" style="font-size: 12px; min-width: 25px;">${quantity}</span>
					<button class="btn btn-outline-success btn-sm increase-qty ms-1" data-product-id="${item.id}"
							style="width: 30px; height: 30px; padding: 0; border-radius: 50%;">
						<i class="bi bi-plus"></i>
					</button>
				</div>
			`;
		} else {
			cartButtonHtml = `
				<button class="btn btn-add-to-cart-custom position-absolute add-to-cart-btn"
						style="right: 14px; bottom: 10px;" data-product-id="${item.id}">
					<i class="bi bi-cart-plus me-1"></i> Thêm vào giỏ
				</button>
			`;
		}

		return `
			<div class="col-md-3 col-sm-6 mb-4">
				<div class="card shadow-sm rounded-3 overflow-hidden h-100 position-relative">
					<div class="ratio ratio-1x1" style="cursor:pointer;" ">
						<img src="${imageUrl}" class="card-img-top object-fit-cover" alt="${item.name || 'Ảnh món ăn'}" 
							 onerror="this.src='${defaultImage}'">
						${item.isAvailable ? `
						<div class="position-absolute top-0 start-0 m-2 px-2 py-1 bg-success text-white rounded small fw-bold"
							 style="width: min-content; height: min-content;">
							PROMO
						</div>` : ''}
						<div class="d-flex justify-content-end align-items-start w-100 position-absolute top-0 start-0 p-2" style="pointer-events: none;">
							<button class="btn btn-light btn-sm rounded-circle"
									style="width: 32px; height: 32px; display: flex; align-items: center; justify-content: center; pointer-events: auto;"
									tabindex="-1">
								<i class="bi bi-heart"></i>
							</button>
						</div>
					</div>
					<div class="card-body p-2 position-relative" style="cursor:pointer;">
						<h6 class="card-title mb-1 fw-bold">
							${item.name || 'Món ăn'}
						</h6>
						<p class="card-text text-muted small mb-1">${item.description || 'Món ăn ngon'}</p>
						<p class="card-text text-muted small mb-0">
							<i class="bi bi-cash-coin me-1"></i>${formattedPrice}
						</p>
						${cartButtonHtml}
					</div>
				</div>
			</div>
		`;
	}
</script>