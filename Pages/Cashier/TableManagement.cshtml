@page
@model FoodieAPII.Pages.Cashier.TableManagementModel
@{
    ViewData["HideLayoutHeader"] = true;

}


<div class="sticky-top bg-white shadow-sm py-2">
    <div class="container d-flex justify-content-between align-items-center">
        <img src="~/images/logo_foddie.jpg" style="height: 80px; object-fit: contain;" />
        <div class="fw-bold fs-5">Quản lý bàn ăn</div>
        <div class="d-flex">
            <a href="#" class="fw-bold fs-5 mx-3">Thu ngân </a>

        </div>
    </div>
</div>

<!-- Danh sách bàn và chức năng bên phải -->
<div class="container mt-4">
    <div class="row">
        <!-- Bàn ăn chiếm 8 phần -->
        <div class="col-md-10">
            <div class="row" id="table-management">
                <!-- Bàn Trống và Có khách sẽ được tạo động ở đây -->
            </div>
        </div>

        <!-- Chức năng bên phải chiếm 4 phần -->
        <div class="col-md-2">
            <!-- Các liên kết chức năng hiển thị theo chiều dọc -->
            <div class="sticky-top bg-light py-2 shadow-sm">
                <div class="d-flex flex-column">
                    <a href="/Cashier/OrderOnlineCashier" class="sidebar-link mb-2">Đơn online</a>
                    <a href="/Cashier/SalesRevenue" class="sidebar-link mb-2">Doanh thu</a>

                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .sidebar-link {
        text-decoration: none;
        color: inherit;
        padding: 10px;
        font-size: 18px;
        display: flex; /* Sử dụng Flexbox */
        align-items: center; /* Căn giữa theo chiều dọc */
        justify-content: center; /* Căn giữa theo chiều ngang */
        height: 50px; /* Chiều cao của mỗi mục liên kết */
        transition: background-color 0.3s;
    }

        .sidebar-link:hover {
            background-color: #007bff;
            color: white;
        }

    a {
        text-decoration: none; /* Loại bỏ dấu chân (underline) */
        color: inherit; /* Đảm bảo màu sắc của thẻ a giống với màu sắc mặc định của văn bản */
    }

    /* Tùy chỉnh cho các cột */
    .col-md-8 {
        padding-right: 15px;
    }

    .col-md-4 {
        padding-left: 15px;
    }

    .sidebar {
        position: fixed;
        top: 0;
        right: 0;
        height: 100%;
        width: 250px;
        background-color: #f8f9fa;
        box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);
        padding-top: 20px;
    }

        .sidebar a {
            display: block;
            text-decoration: none;
            color: #333;
            padding: 12px;
            font-size: 16px;
            margin-bottom: 10px;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

            .sidebar a:hover {
                background-color: #007bff;
                color: white;
            }

        .sidebar .icon {
            margin-right: 10px;
            font-size: 20px;
        }
</style>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        const API_ENDPOINT = 'https://localhost:5001/api/CartV2/dining-tables';

        function fetchTables() {
            fetch(API_ENDPOINT, {
                method: 'GET',
                headers: {
                    'Accept': '*/*'
                }
            })
            .then(response => {
                if (!response.ok) throw new Error('Network response was not ok');
                return response.json();
            })
            .then(result => {
                if (result.status === "Success") {
                    renderTables(result.data);
                } else {
                    console.error("Lỗi từ API:", result.message);
                }
            })
            .catch(error => {
                console.error("Lỗi khi gọi API bàn:", error);
            });
        }

        function renderTables(tables) {
            const tableManagementElement = document.getElementById('table-management');
            if (!tableManagementElement) return;

            const statusText = {
                "Empty": "Trống",
                "Occupied": "Đang có khách",
                "Reserved": "Đã đặt bàn",
                "WaitingPayment": "Chờ thanh toán"
            };

            const statusColor = {
                "Empty": "success",
                "Occupied": "warning",
                "Reserved": "info",
                "WaitingPayment": "danger"
            };

            tableManagementElement.innerHTML = '';

            tables.forEach(table => {
                const card = document.createElement('div');
                card.className = 'col-md-3 mb-4';
                        card.innerHTML = `
            <a href="/Cashier/FoodManagementCashier"
               onclick="selectTable('${table.id}', ${table.tableNumber}, '${table.status}', ${table.activeOrderCount})"
               class="d-block text-decoration-none" id="table-${table.id}">
                <div class="card text-center shadow-sm rounded-3">
                    <div class="card-body">
                        <div class="fw-bold mb-2">Bàn ${table.tableNumber}</div>
                        <p class="text-muted">${statusText[table.status] || 'Không rõ'}</p>
                        <span class="badge bg-${statusColor[table.status] || 'secondary'}">
                            ${table.activeOrderCount} đơn
                        </span>
                    </div>
                </div>
            </a>
        `;

                tableManagementElement.appendChild(card);
            });
        }

        // Gọi sau khi DOM và jQuery đã sẵn sàng
        $(function () {
            fetchTables();
        });
                function selectTable(id, tableNumber, status, activeOrderCount) {
            const table = { id, tableNumber, status, activeOrderCount };
            localStorage.setItem("selectedTable", JSON.stringify(table));
        }
    </script>
}
