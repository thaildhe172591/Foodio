@page
@model FoodieAPII.Pages.Cashier.OrderOnlineCashierModel
@{
    ViewData["HideLayoutHeader"] = true;
}

<body>
    <div class="container mt-5">
        <h1 class="mb-4">Đơn Online - Món ăn</h1>
        <table class="table table-striped" id="orders-table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Mã đơn</th>
                    <th>Món ăn</th>
                    <th>Địa chỉ giao</th>
                    <th>Trạng thái</th>
                    <th>Phân cho Shipper</th>
                </tr>
            </thead>
            <tbody>
                <!-- Dữ liệu đơn hàng sẽ điền vào bằng JavaScript -->
            </tbody>
        </table>
    </div>

    <!-- Modal phân shipper -->
    <div class="modal fade" id="assignModal" tabindex="-1" aria-labelledby="assignModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="assignModalLabel">Phân công cho Shipper</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="assign-form">
                        <div class="mb-3">
                            <label for="shipper-select" class="form-label">Chọn Shipper</label>
                            <select class="form-select" id="shipper-select"></select>
                        </div>
                        <button type="submit" class="btn btn-primary">Phân công</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const token = localStorage.getItem("access_token");
        const orderApi = "/api/CartV2/my-orders-cash";
        const shipperApi = "/api/admin/users/search-staff?RoleId=4f16b86a-cc61-4e79-9db7-82e98cdd50da";

        let orders = [];
        let shippers = [];

        document.addEventListener('DOMContentLoaded', async () => {
            if (!token) {
                alert("Vui lòng đăng nhập.");
                window.location.href = "/auth/login";
                return;
            }

            await fetchOrders();
            await fetchShippers();
            renderOrders();
        });

        async function fetchOrders() {
            try {
                const res = await fetch(orderApi, {
                    headers: { 'Authorization': `Bearer ${token}` }
                });
                const json = await res.json();
                if (json.status === "Success") {
                    orders = json.data || [];
                }
            } catch (e) {
                console.error("Lỗi đơn hàng:", e);
            }
        }

        async function fetchShippers() {
            try {
                const res = await fetch(shipperApi, {
                    headers: { 'Authorization': `Bearer ${token}` }
                });
                const json = await res.json();
                if (json.status === "Success") {
                    shippers = json.data.data || [];
                }
            } catch (e) {
                console.error("Lỗi shipper:", e);
            }
        }

        function renderOrders() {
            const tbody = document.querySelector("#orders-table tbody");
            tbody.innerHTML = "";

            orders.forEach((order, index) => {
                const createdAt = new Date(order.createdAt).toLocaleString('vi-VN');
                const total = (order.total || 0).toLocaleString('vi-VN') + "₫";
                const foodList = (order.foods || []).join(", ");

                const row = document.createElement("tr");
                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${order.orderCode}</td>
                    <td>${foodList}</td>
                    <td>${order.adress || ""}</td>
                    <td>${order.status}</td>
                    <td>
                        ${order.isAssignmentShip
                            ? `<span>Đã phân</span>`
                            : `<button class="btn btn-primary btn-sm" onclick="openAssignModal('${order.orderId}')">Đặt shipper</button>`}
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function openAssignModal(orderId) {
            const modal = new bootstrap.Modal(document.getElementById('assignModal'));
            const select = document.getElementById("shipper-select");
            select.innerHTML = "";

            shippers.forEach(shipper => {
                const option = document.createElement("option");
                option.value = shipper.id;
                option.textContent = `${shipper.userName} (${shipper.email})`;
                select.appendChild(option);
            });

            document.getElementById("assign-form").onsubmit = async function (e) {
                e.preventDefault();
                const shipperId = select.value;
                await assignOrder(orderId, shipperId);
                modal.hide();
            };

            modal.show();
        }

        async function assignOrder(orderId, shipperId) {
            try {
                const res = await fetch("/api/CartV2/assign-shipper", {
                    method: "POST",
                    headers: {
                        "Authorization": `Bearer ${token}`,
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ orderId, shipperId })
                });

                if (res.ok) {
                    alert("Phân shipper thành công!");
                    await fetchOrders();
                    renderOrders();
                } else {
                    alert("Thất bại khi phân shipper.");
                }
            } catch (e) {
                console.error("Lỗi khi gửi API:", e);
            }
        }
    </script>
</body>