@page
@model FoodieAPII.Pages.Account.TrackOrderModel
@{
    ViewData["HideLayoutHeader"] = true;

}
<div class="sticky-top bg-white shadow-sm" style="z-index:1030;">
    <div class="container">
        <div class="header d-flex align-items-center justify-content-between py-3">
            <div class="d-flex align-items-center">
                <img src="~/images/logo_foddie.jpg" alt="GrabFood Logo" style="height: 80px;">
                <div class="header-menu mx-3">
                    <a href="/Account/HomePageLogin" class=" fw-semibold menu-link">Trang chủ</a>
                </div>
            </div>
            <a href="/Account/User">
                <div class="d-flex flex-column align-items-center">
                    <i class="bi bi-person-circle text-dark" style="font-size: 30px;"></i>
                </div>
            </a>
        </div>
    </div>
</div>

<div class="container mt-5">
    <div class="card shadow rounded">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Đơn hàng của bạn đang được xử lý</h5>
        </div>
        <div class="card-body">
            <!-- Thông tin đơn -->
            <div class="mb-3">
                <p><strong>Mã đơn hàng:</strong> <span id="order-code">#---</span></p>
                <p><strong>Thời gian đặt:</strong> <span id="order-date">--/--/----</span></p>
                <p><strong>Tổng tiền:</strong> <span id="order-total">--</span></p>
            </div>

            <!-- Tiến trình đơn hàng -->
            <div class="mb-4">
                <h6 class="mb-3">Theo dõi đơn hàng</h6>
                <ul class="list-group list-group-horizontal-sm">
                    <li class="list-group-item flex-fill text-center bg-success text-white" id="step-1">
                        <i class="bi bi-check-circle-fill me-1"></i> Đang xác nhận
                    </li>
                    <li class="list-group-item flex-fill text-center" id="step-2">
                        <i class="bi bi-hourglass-split me-1"></i> Đang chuẩn bị
                    </li>
                    <li class="list-group-item flex-fill text-center" id="step-3">
                        <i class="bi bi-truck me-1"></i> Đang giao
                    </li>
                    <li class="list-group-item flex-fill text-center" id="step-4">
                        <i class="bi bi-check2-circle me-1"></i> Hoàn tất
                    </li>
                </ul>
            </div>

            <!-- Thông tin người nhận -->
            <div class="mb-3">
                <h6>Thông tin giao hàng</h6>
                <p><strong>Tên:</strong> <span id="receiver-name">---</span></p>
                <p><strong>Địa chỉ:</strong> <span id="receiver-address">---</span></p>
                <p><strong>SĐT:</strong> <span id="receiver-phone">---</span></p>
            </div>

            <!-- Ghi chú -->
            <div class="mb-3">
                <h6>Ghi chú:</h6>
                <p id="order-note">---</p>
            </div>
            <!-- Nút hiển thị thông tin ship -->
            <div class="mb-3">
                <button class="btn btn-outline-primary" id="showShipperBtn" style="display:none;">Hiển thị thông tin người ship</button>
            </div>

            <!-- Vùng hiển thị thông tin ship -->
            <div id="shipperInfo" class="mb-3">
                <h6>Thông tin người ship:</h6>
                <p><strong>Tên shipper:</strong> <span id="shipper-name"></span></p>
                <p><strong>SĐT:</strong> <span id="shipper-phone"></span></p>
            </div>
            <!-- Trạng thái hiện tại -->
            <div class="mb-3">
                <h6>Trạng thái hiện tại:</h6>
                <p><strong><span id="current-status" class="badge bg-secondary">---</span></strong></p>
            </div>
            
            <div class="text-end">
                <a href="/Account/User" class="btn btn-outline-primary me-2">Quay lại danh sách đơn</a>
                <a href="/Account/Cart" class="btn btn-outline-secondary">Quay lại giỏ hàng</a>
            </div>
        </div>
    </div>
</div>

<style>
    .container {
        max-width: 900px;
    }

    .header-menu .menu-link {
        text-decoration: none;
        font-size: 18px;
        font-weight: 600;
        transition: color 0.3s ease;
        color: #000;
    }

    .menu-link:hover {
        background: linear-gradient(90deg, #ffc107, #ff8800);
        color: white;
        padding: 5px 10px;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', async function () {
        const token = localStorage.getItem('access_token');
        const params = new URLSearchParams(window.location.search);
        const orderId = params.get("id");

        if (!orderId || !token) {
            alert("Không tìm thấy đơn hàng hoặc chưa đăng nhập.");
            window.location.href = "/Account/HomePageLogin";
            return;
        }

        try {
            const res = await fetch(`/api/CartV2/order-detail/${orderId}`, {
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Accept': 'application/json'
                }
            });

            const result = await res.json();

            if (!res.ok || !result || !result.data) {
                alert("Không thể lấy thông tin đơn hàng.");
                return;
            }

            const order = result.data;
                const shipperName = order.shipperName;
    const shipperPhone = order.shipperPhone;

    if (shipperName && shipperPhone) {
        document.getElementById('shipperInfo').style.display = 'none'; // chờ người dùng click
        document.getElementById('shipper-name').innerText = shipperName;
        document.getElementById('shipper-phone').innerText = shipperPhone;
        document.getElementById('showShipperBtn').style.display = 'inline-block'; // hiện nút
    } else {
        document.getElementById('shipperInfo').style.display = 'none';
        document.getElementById('showShipperBtn').style.display = 'none'; // ẩn luôn nút nếu không có
    }

            // Hiển thị thông tin đơn hàng
            document.getElementById('order-code').innerText = order.orderCode || order.orderId;
            document.getElementById('order-date').innerText = new Date(order.createdAt).toLocaleString('vi-VN');
            document.getElementById('order-total').innerText = (order.total || 0).toLocaleString('vi-VN') + "₫";

            document.getElementById('receiver-name').innerText = order.deliveryName || "Không rõ";
            document.getElementById('receiver-address').innerText = order.deliveryAddress || "Không rõ";
            document.getElementById('receiver-phone').innerText = order.deliveryPhone || "Không rõ";
            document.getElementById('order-note').innerText = order.deliveryNote || "Không có ghi chú";

            // Hiển thị trạng thái hiện tại
            const currentStatusElement = document.getElementById('current-status');
            currentStatusElement.innerText = order.status || "Không rõ";
            currentStatusElement.className = getStatusBadgeClass(order.status);

            // Highlight trạng thái đơn hàng
            highlightStatus(order.status);

            // Setup shipper info toggle
            const showShipperBtn = document.getElementById('showShipperBtn');
            if (showShipperBtn) {
                showShipperBtn.addEventListener('click', function() {
                    const shipperInfo = document.getElementById('shipperInfo');
                    if (shipperInfo.style.display === 'none') {
                        shipperInfo.style.display = 'block';
                        this.innerText = 'Ẩn thông tin người ship';
                    } else {
                        shipperInfo.style.display = 'none';
                        this.innerText = 'Hiển thị thông tin người ship';
                    }
                });
            }

        } catch (err) {
            console.error("Lỗi lấy thông tin đơn:", err);
            alert("Đã xảy ra lỗi khi tải đơn hàng.");
        }
    });

    function highlightStatus(status) {
        const s = (status || "").toLowerCase();
        
        // Reset all steps to default state first
        document.getElementById("step-1").className = "list-group-item flex-fill text-center bg-success text-white";
        document.getElementById("step-2").className = "list-group-item flex-fill text-center";
        document.getElementById("step-3").className = "list-group-item flex-fill text-center";
        document.getElementById("step-4").className = "list-group-item flex-fill text-center";
        
        // Update step labels and highlighting based on status
        if (s.includes("chờ xác nhận") || s.includes("pending")) {
            // Step 1: Waiting for confirmation - already highlighted by default
            document.getElementById("step-1").innerHTML = '<i class="bi bi-hourglass-split me-1"></i> Chờ xác nhận';
        } else if (s.includes("đã xác nhận") || s.includes("confirmed") || s.includes("đang chuẩn bị")) {
            // Step 2: Confirmed/Preparing
            document.getElementById("step-1").innerHTML = '<i class="bi bi-check-circle-fill me-1"></i> Đã xác nhận';
            document.getElementById("step-2").classList.add("bg-warning", "text-dark");
            document.getElementById("step-2").innerHTML = '<i class="bi bi-gear-fill me-1"></i> Đang chuẩn bị';
        } else if (s.includes("đang giao") || s.includes("on_the_way") || s.includes("shipping")) {
            // Step 3: On the way
            document.getElementById("step-1").innerHTML = '<i class="bi bi-check-circle-fill me-1"></i> Đã xác nhận';
            document.getElementById("step-2").classList.add("bg-success", "text-white");
            document.getElementById("step-2").innerHTML = '<i class="bi bi-check-circle-fill me-1"></i> Đã chuẩn bị';
            document.getElementById("step-3").classList.add("bg-info", "text-white");
            document.getElementById("step-3").innerHTML = '<i class="bi bi-truck me-1"></i> Đang giao';
        } else if (s.includes("hoàn tất") || s.includes("đã giao") || s.includes("completed") || s.includes("delivered")) {
            // Step 4: Completed
            document.getElementById("step-1").innerHTML = '<i class="bi bi-check-circle-fill me-1"></i> Đã xác nhận';
            document.getElementById("step-2").classList.add("bg-success", "text-white");
            document.getElementById("step-2").innerHTML = '<i class="bi bi-check-circle-fill me-1"></i> Đã chuẩn bị';
            document.getElementById("step-3").classList.add("bg-success", "text-white");
            document.getElementById("step-3").innerHTML = '<i class="bi bi-check-circle-fill me-1"></i> Đã giao';
            document.getElementById("step-4").classList.add("bg-success", "text-white");
            document.getElementById("step-4").innerHTML = '<i class="bi bi-check2-circle me-1"></i> Hoàn tất';
        } else if (s.includes("hủy") || s.includes("cancelled") || s.includes("failed") || s.includes("thất bại")) {
            // Cancelled or Failed
            document.getElementById("step-1").classList.remove("bg-success");
            document.getElementById("step-1").classList.add("bg-danger", "text-white");
            document.getElementById("step-1").innerHTML = '<i class="bi bi-x-circle-fill me-1"></i> Đã hủy/Thất bại';
        }
    }

    // Function to get status badge class
    function getStatusBadgeClass(status) {
        const s = (status || "").toLowerCase();
        if (s.includes("chờ xác nhận") || s.includes("pending")) {
            return "badge bg-secondary";
        } else if (s.includes("đã xác nhận") || s.includes("confirmed")) {
            return "badge bg-warning text-dark";
        } else if (s.includes("đang giao") || s.includes("on_the_way")) {
            return "badge bg-info";
        } else if (s.includes("hoàn tất") || s.includes("đã giao") || s.includes("completed")) {
            return "badge bg-success";
        } else if (s.includes("hủy") || s.includes("cancelled") || s.includes("failed")) {
            return "badge bg-danger";
        } else {
            return "badge bg-secondary";
        }
    }
</script>