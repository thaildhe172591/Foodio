@page
@model FoodioClient.Pages.Admin.MenuItemsModel
@{
    ViewData["Title"] = "Quản lý Món ăn";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
<style>
    #itemsTable th,
    #itemsTable td {
        color: whitesmoke !important;
    }
</style>
<main class="main-wrapper">
    <div class="main-content">
        <div class="container-fluid py-4">
            <h3 class="mb-4">Quản lý Món ăn</h3>

            <div class="card mb-4">
                <div class="card-body">
                    <form id="searchForm" class="row g-2 align-items-end">
                        <div class="col-md-3">
                            <label class="form-label">Tên món</label>
                            <input type="text" id="keyword" class="form-control" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Danh mục</label>
                            <select id="categoryFilter" class="form-select"></select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Trạng thái</label>
                            <select id="availableFilter" class="form-select">
                                <option value="">Tất cả</option>
                                <option value="true">Còn món</option>
                                <option value="false">Hết món</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Sắp xếp</label>
                            <select id="sortBy" class="form-select">
                                <option value="name">Tên</option>
                                <option value="price">Giá</option>
                                <option value="createdDate">Ngày tạo</option>
                            </select>
                        </div>
                        <div class="col-md-2 d-grid">
                            <button type="button" id="btnSearch" class="btn btn-primary">Tìm kiếm</button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Danh sách Món ăn</h5>
                    <button class="btn btn-success" id="btnAdd">Thêm Món</button>
                </div>
                <div class="card-body">
                    <table id="itemsTable" class="table table-striped w-100">
                        <thead>
                            <tr>
                                <th>Tên</th>
                                <th>Danh mục</th>
                                <th>Giá</th>
                                <th>Trạng thái</th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>
</main>

<!-- Modal add/edit đơn giản chỉ demo -->
<div class="modal fade" id="itemModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h5 id="itemModalLabel" class="modal-title">Thêm Món</h5><button class="btn-close" data-bs-dismiss="modal"></button></div>
            <form id="itemForm">
                <div class="modal-body">
                    <input type="hidden" id="itemId" />
                    <div class="mb-3">
                        <label class="form-label">Tên</label>
                        <input class="form-control" id="itemName" required/>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Giá</label>
                        <input type="number" class="form-control" id="itemPrice" required min="0" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Danh mục</label>
                        <select id="itemCategory" class="form-select" required></select>
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="itemAvailable">
                        <label class="form-check-label" for="itemAvailable">Còn món</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button class="btn btn-primary" type="submit">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    @await Html.PartialAsync("_ToastrScripts")

    <script>
        const menuApi = "/api/admin/menu-items";
        const catApi = "/api/admin/categories";
        const token = localStorage.getItem('access_token');
        const categoriesMap = {};
        let itemTable;

        $(function () {
            itemTable = $('#itemsTable').DataTable({
                ordering: false,
                columns: [
                    { data: 'name' },
                    {
                        data: 'categoryId',
                        render: id => categoriesMap[id] ?? '<i class="text-muted">N/A</i>'
                    },
                    {
                        data: 'price',
                        render: function(val){
                            const v = val ?? 0;
                            return v.toLocaleString('vi-VN',{style:'currency',currency:'VND'});
                        }
                    },
                    {
                        data: 'isAvailable',
                        render: d => d ? '<span class="badge bg-success">Còn</span>' : '<span class="badge bg-secondary">Hết món</span>'
                    },
                    {
                        data: null,
                        render: d => `<div class="btn-group btn-group-sm">
                                    <button class="btn btn-outline-primary edit-btn" data-id="${d.id}">Sửa</button>
                                    <button class="btn btn-outline-danger delete-btn" data-id="${d.id}">Xoá</button>
                                </div>`
                    }
                ]
            });

            loadCategories();
            fetchItems();

            $('#btnSearch').click(fetchItems);
            $('#btnAdd').click(()=>{ resetModal(); $('#itemModal').modal('show'); });
            $('#itemForm').submit(saveItem);
            $(document).on('click','.edit-btn',openEdit);
            $(document).on('click','.delete-btn',deleteItem);
        });

        async function loadCategories(){
            const res = await fetch(catApi, {headers:{Authorization:`Bearer ${token}`}});
            const data = await res.json();
            const list = data.items ?? data.data?.data ?? [];
            list.forEach(c=>{
                $('#categoryFilter, #itemCategory').append(`<option value="${c.id}">${c.name}</option>`);
                categoriesMap[c.id] = c.name;
            });
        }

        async function fetchItems(){
            const p = new URLSearchParams();
            if($('#keyword').val()) p.append('searchTerm',$('#keyword').val());
            if($('#categoryFilter').val()) p.append('categoryId',$('#categoryFilter').val());
            if($('#availableFilter').val()) p.append('isAvailable',$('#availableFilter').val());
            p.append('sortBy',$('#sortBy').val());
            const res = await fetch(`${menuApi}?${p.toString()}`,{headers:{Authorization:`Bearer ${token}`}});
            const json = await res.json();
            const rows = json.data?.items ?? json.items ?? [];
            itemTable.clear(); itemTable.rows.add(rows); itemTable.draw();
        }

        function resetModal(item=null){
            $('#itemId').val(item?.id||'');
            $('#itemName').val(item?.name||'');
            $('#itemPrice').val(item?.price||'');
            $('#itemCategory').val(item?.categoryId||'');
            $('#itemAvailable').prop('checked', item?.isAvailable ?? true);
            $('#itemModalLabel').text(item?'Cập nhật Món':'Thêm Món');
        }

        async function openEdit(){
            const id=$(this).data('id');
            const res= await fetch(`${menuApi}/${id}`,{headers:{Authorization:`Bearer ${token}`}});
            const item = await res.json();
            resetModal(item);
            $('#itemModal').modal('show');
        }

        async function saveItem(e){
            e.preventDefault();
            const id=$('#itemId').val();
            const dto={
                name:$('#itemName').val(),
                price:parseFloat($('#itemPrice').val()),
                categoryId:$('#itemCategory').val(),
                isAvailable: $('#itemAvailable').is(':checked')
            };
            const opt={
                method: id?'PUT':'POST',
                headers:{'Content-Type':'application/json',Authorization:`Bearer ${token}`},
                body:JSON.stringify(dto)
            };
            const url=id?`${menuApi}/${id}`:menuApi;
            const res=await fetch(url,opt);
            if(res.ok){
                toastr.success('Đã lưu');
                $('#itemModal').modal('hide');
                await fetchItems();
            }
            else toastr.error('Lỗi');
        }

        async function deleteItem(){
            if(!confirm('Xoá?'))return;
            const id=$(this).data('id');
            const res=await fetch(`${menuApi}/${id}`,{method:'DELETE',headers:{Authorization:`Bearer ${token}`} });
            if(res.ok){ toastr.success('Đã xoá'); await fetchItems(); } else toastr.error('Không thể xoá');
        }
    </script>
}