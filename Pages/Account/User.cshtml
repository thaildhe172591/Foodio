@page
@model FoodieAPII.Pages.Account.UserModel
@{
    ViewData["HideLayoutHeader"] = true;

}



<div class="sticky-top bg-white shadow-sm" style="z-index:1030;">
    <div class="container sticky-top bd-white">
        <div class="header d-flex justify-content-between align-items-center">
            <!-- Logo and Menu Section -->
            <div class="d-flex align-items-center">
                <img src="~/images/logo_foddie.jpg" alt="GrabFood Logo" style="height: 80px;">
                <div class="header-menu mx-3">
                    <a href="/Account/HomePageLogin" class="text-dark fw-semibold menu-link">Menu</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-5">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-md-3">
            <div class="list-group shadow-sm">
                <a class="list-group-item list-group-item-action" data-bs-toggle="tab" href="#tab-orders">
                    <i class="bi bi-cart3 me-2"></i> Thông tin đơn hàng
                </a>
            </div>
        </div>

        <!-- Nội dung -->
        <div class="col-md-9">
            <div class="tab-content">
                <!-- Đơn hàng -->
                <div  id="tab-orders">
                    <h5 class="mb-3">Thông tin đơn hàng</h5>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Mã đơn</th>
                                <th>Ngày đặt</th>
                                <th>Trạng thái</th>
                                <th>Tổng tiền</th>
                                <th>Chi tiết</th>
                            </tr>
                        </thead>
                        <tbody id="order-list-body">
                            <tr><td colspan="5" class="text-center text-muted">Nhấp vào "Thông tin đơn hàng" để xem đơn hàng của bạn.</td></tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .header {
        position: sticky;
        top: 0;
        z-index: 1000;
        background-color: #fff;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 12px 24px;
    }

        .header img {
            margin-right: 20px;
            border-radius: 8px;
        }

    .btn-warning {
        background: linear-gradient(90deg, #ffbf2f, #ff9e3e);
        color: #222;
        font-weight: 600;
        border: none;
    }

        .btn-warning:hover {
            background: linear-gradient(90deg, #ffc107, #ff8800);
            color: white;
        }

    .menu-link {
        text-decoration: none; /* Remove underline */
        transition: background 0.3s ease-in-out; /* Smooth transition for the hover effect */
    }

        .menu-link:hover {
            background: linear-gradient(90deg, #ffc107, #ff8800); /* Gradient on hover */
            color: white; /* Change text color to white on hover */
            padding: 5px 10px; /* Optional: Add padding to make the effect more noticeable */
        }

    .btn-outline-warning {
        border: 2px solid #ffbf2f;
        color: #ffbf2f;
        font-weight: 600;
    }

        .btn-outline-warning:hover {
            background: linear-gradient(90deg, #ffbf2f, #ff9e3e);
            color: white;
        }

</style>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Check authentication token on page load
        const token = localStorage.getItem('access_token');
        if (!token) {
            alert("Bạn cần đăng nhập lại.");
            window.location.href = "/auth/login";
            return;
        }
        loadOrders()
    });

    // Function to load orders when tab is clicked
    async function loadOrders() {
        const token = localStorage.getItem('access_token');
        if (!token) {
            alert("Bạn cần đăng nhập lại.");
            window.location.href = "/auth/login";
            return;
        }

        const tbody = document.getElementById('order-list-body');
        tbody.innerHTML = `<tr><td colspan="5" class="text-center">Đang tải...</td></tr>`;

        try {
            const response = await fetch('/api/CartV2/my-orders', {
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            const result = await response.json();

            if (!result || result.status !== "Success" || !Array.isArray(result.data)) {
                throw new Error("Kết quả trả về không hợp lệ.");
            }

            const orders = result.data;

            if (orders.length === 0) {
                tbody.innerHTML = `<tr><td colspan="5" class="text-center text-muted">Bạn chưa có đơn hàng nào.</td></tr>`;
                return;
            }

            tbody.innerHTML = ""; // Clear loading row

            orders.forEach(order => {
                const statusBadge = getStatusBadge(order.status);
                const createdDate = new Date(order.createdAt).toLocaleDateString('vi-VN');
                const total = (order.total || 0).toLocaleString('vi-VN') + "₫";

                tbody.innerHTML += `
                    <tr>
                        <td>${order.orderCode}</td>
                        <td>${createdDate}</td>
                        <td>${statusBadge}</td>
                        <td>${total}</td>
                         <td><a href="/Account/TrackOrder?id=${encodeURIComponent(order.orderId)}" class="btn btn-sm btn-outline-primary">Xem</a></td>
                    </tr>
                `;
            });

        } catch (err) {
            console.error("Lỗi lấy đơn hàng:", err);
            tbody.innerHTML = `<tr><td colspan="5" class="text-danger text-center">Không thể tải đơn hàng. Vui lòng thử lại.</td></tr>`;
        }
    }

    function getStatusBadge(status) {
        const lower = (status || "").toLowerCase();
        if (lower.includes("chờ xác nhận")) {
            return '<span class="badge bg-secondary">Chờ xác nhận</span>';
        } else if (lower.includes("giao")) {
            return '<span class="badge bg-success">Đã giao</span>';
        } else if (lower.includes("đã xác nhận")) {
            return '<span class="badge bg-warning text-dark">Đang xử lý</span>';
        } else if (lower.includes("hủy") || lower.includes("fail")) {
            return '<span class="badge bg-danger">Thất bại</span>';
        } else {
            return `<span class="badge bg-secondary">${status || "Không rõ"}</span>`;
        }
    }
</script>

