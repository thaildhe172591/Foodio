@page
@model FoodieAPII.Pages.Cashier.PayBillCashierModel
@{
    ViewData["HideLayoutHeader"] = true;
}

<div class="sticky-top bg-white shadow-sm px-4 py-2 d-flex align-items-center justify-content-between" style="z-index:1040;">
    <div class="d-flex align-items-center">
        <img src="~/images/logo_foddie.jpg" alt="GrabFood Logo" style="height: 60px; border-radius: 8px;">
        <div class="text-dark fw-bold fs-5 ms-3" id="ban-dat-so">
            Bàn Đặt số
        </div>
    </div>
    <div class="header-search-button d-flex align-items-center gap-3">
        <button class="btn btn-outline-info" onclick="trangchu()">Trang chủ</button>
        <button class="btn btn-outline-danger" onclick="logout()">Đăng xuất</button>
    </div>
</div>

<div class="sticky-top bg-white shadow-sm" style="z-index:1030;">
    <div class="container sticky-top bd-white">
        <div class="header d-flex justify-content-between align-items-center py-3">
            <!-- Logo Section -->
            <div class="d-flex align-items-center">
                <img src="~/images/logo_foddie.jpg" alt="GrabFood Logo" style="height: 80px;">
            </div>

            <div class="header-search-button d-flex align-items-center gap-3">
                <!-- You can add more buttons or content here if needed -->
            </div>
        </div>
    </div>
</div>

<!-- CSS -->
<style>
    .order-summary {
        background: #fff;
        padding: 24px;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        max-width: 500px;
        margin: 40px auto;
    }

    .summary-title {
        font-size: 20px;
        font-weight: 600;
        margin-bottom: 20px;
    }

    .summary-item {
        margin-bottom: 12px;
        font-size: 16px;
    }

    .summary-label {
        font-weight: 500;
    }

    .food-list {
        margin-top: 20px;
        padding-top: 10px;
        border-top: 1px dashed #ccc;
    }

    .food-item {
        display: flex;
        justify-content: space-between;
        font-size: 15px;
        margin-bottom: 8px;
    }

        .food-item span:first-child {
            font-weight: 500;
        }

    .btn-add-to-cart-custom {
        background: linear-gradient(90deg, #ffbf2f, #ff9e3e);
        color: #222;
        border: none;
        border-radius: 22px;
        font-weight: 600;
        font-size: 14px;
        padding: 10px 20px;
        box-shadow: 0 3px 12px 0 rgba(255, 190, 50, 0.13);
        display: flex;
        justify-content: center;
        align-items: center;
        transition: background 0.2s, color 0.2s, box-shadow 0.2s, transform 0.18s;
        text-decoration: none;
        width: 100%;
    }

        .btn-add-to-cart-custom:hover {
            background: linear-gradient(90deg, #ffc107, #ff8800);
            color: #fff !important;
            box-shadow: 0 6px 20px 0 rgba(255, 180, 30, 0.18);
            transform: translateY(-2px) scale(1.04);
            text-decoration: none;
        }

    .header {
        display: flex;
        align-items: center;
        justify-content: space-between; /* Đưa phần header-search-button sang phải */
        padding: 12px 24px;
        background: #fff;
        gap: 0;
    }

        .header img {
            border-radius: 8px;
            flex-shrink: 0;
        }

    .search-container {
        display: flex;
        align-items: center;
        background-color: #f0f0f0;
        border-radius: 20px;
        padding: 6px 16px;
        flex: 1 1 280px;
        min-width: 180px;
        max-width: 420px;
        margin-left: 12px;
        margin-right: 12px;
    }

    .header-search-button {
        display: flex;
        align-items: center;
        gap: 1.2rem;
        flex-shrink: 0;
    }

    .search-container:focus-within {
        box-shadow: 0 0 0 2px #ff5722;
    }

    .search-container .bi {
        font-size: 18px;
        color: #888;
    }

    .search-input {
        border: none;
        background: transparent;
        outline: none;
        font-size: 16px;
        width: 100%;
        padding: 4px 0;
    }
    
    /* QR Payment Modal Styles */
    .qr-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 200px;
    }
    
    #qr-code-image {
        border: 3px solid #dee2e6;
        transition: transform 0.3s ease;
    }
    
    #qr-code-image:hover {
        transform: scale(1.05);
    }
    
    .payment-info {
        border-left: 4px solid #007bff;
    }
    
    .modal-lg {
        max-width: 600px;
    }
    
</style>

<!-- HTML -->
<div class="order-summary">
    <div class="summary-title text-center">Xác Nhận Đơn Hàng</div>

    <!-- Thay đổi thông tin từ Loại đơn, Địa chỉ, Số điện thoại, Ghi chú sang Số bàn, Tên khách hàng, Số điện thoại -->
    <div class="summary-item">
        <span class="summary-label">Số bàn:</span> <span id="table-number-display">?</span>
    </div>

    <div class="food-list" id="food-list-display">
        <div class="summary-label mb-2">Món đã đặt:</div>
        <div class="food-item">
            <span>Bánh mì bò nướng</span>
            <span>1 x 35.000đ</span>
        </div>
        <div class="food-item">
            <span>Trà sữa truyền thống</span>
            <span>2 x 28.000đ</span>
        </div>
        <div class="food-item">
            <span>Cơm gà xối mỡ</span>
            <span>1 x 42.000đ</span>
        </div>
        <hr />
        <div class="food-item fw-bold">
            <span>Tổng cộng</span>
            <span>133.000đ</span>
        </div>
    </div>

    <div class="container my-5">
        <button type="button" class="btn btn-success btn-lg w-100 mb-3" onclick="placeOrder()">Thanh toán </button>
        @* <button type="button" class="btn btn-outline-primary btn-lg w-100" onclick="printInvoice()">In hóa đơn</button> *@
    </div>
</div>

<!-- QR Payment Modal -->
<div class="modal fade" id="qrPaymentModal" tabindex="-1" aria-labelledby="qrPaymentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="qrPaymentModalLabel">
                    <i class="bi bi-qr-code me-2"></i>Thanh toán QR Code
                </h5>
                <button type="button" class="btn-close btn-close-white" onclick="closeQRModal()" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-4">
                <div class="mb-3">
                    <h6 class="text-muted">Quét mã QR để thanh toán</h6>
                </div>
                
                <!-- QR Code Image -->
                <div class="qr-container mb-4">
                    <img id="qr-code-image" src="" alt="QR Code Payment" class="img-fluid rounded shadow" style="max-width: 300px; max-height: 300px;">
                </div>
                
                <!-- Payment Info -->
                <div class="payment-info bg-light rounded p-3 mb-3">
                    <div class="row">
                        <div class="col-md-6">
                            <strong>Số tiền:</strong> <span id="payment-amount" class="text-success fw-bold">0đ</span>
                        </div>
                        <div class="col-md-6">
                            <strong>Mã đơn:</strong> <span id="payment-order-id" class="text-primary">---</span>
                        </div>
                    </div>
                </div>
                
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    Vui lòng sử dụng ứng dụng ngân hàng để quét mã QR và thực hiện thanh toán
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeQRModal()">
                    <i class="bi bi-x-circle me-1"></i>Hủy
                </button>
                <button type="button" class="btn btn-success" onclick="confirmPayment()">
                    <i class="bi bi-check-circle me-1"></i>Xác nhận đã thanh toán
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal popup -->
<div class="modal fade" id="orderSuccessModal" tabindex="-1" aria-labelledby="orderSuccessModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center">
            <div class="modal-header border-0">
                <h5 class="modal-title w-100 fw-bold" id="orderSuccessModalLabel">✅ Đặt hàng thành công!</h5>
            </div>
            <div class="modal-body">
                Cảm ơn bạn đã đặt hàng. Chúng tôi sẽ xử lý đơn hàng trong thời gian sớm nhất.
            </div>
            <div class="modal-footer border-0 justify-content-center">
                <button type="button" class="btn btn-success" onclick="redirectAfterClose()">Đóng</button>
            </div>
        </div>
    </div>
</div>

<!-- JS -->
<script>
    function showSuccessPopup() {
        var modal = new bootstrap.Modal(document.getElementById('orderSuccessModal'));
        modal.show();
    }

    function redirectAfterClose() {
        window.location.href = "/Cashier/TableManagement"; // Redirect after closing modal
    }

    function trackOrder() {
        window.location.href = "/Account/TrackOrder";
    }

    function printInvoice() {
        // In hóa đơn (giả lập)
        alert("Đang in hóa đơn...");

        // Sau khi in xong, quay lại trang quản lý bàn
        window.location.href = "/Cashier/TableManagement";
    }

     document.addEventListener('DOMContentLoaded', function () {
        // Lấy thông tin bàn từ localStorage
        const selectedTable = JSON.parse(localStorage.getItem('selectedTable') || '{}');
        if (selectedTable?.tableNumber) {
            document.getElementById("table-number-display").textContent = selectedTable.tableNumber;
        }

        // Lấy thông tin cart từ sessionStorage
        const cart = JSON.parse(sessionStorage.getItem('cashierCart') || '[]');
        const foodListContainer = document.getElementById("food-list-display");

        if (!cart.length) {
            foodListContainer.innerHTML = `<p class="text-muted">Không có món nào trong giỏ hàng.</p>`;
            return;
        }

        let total = 0;
        let html = `
            <div class="summary-label mb-2">Món đã đặt:</div>
        `;

        cart.forEach(item => {
            const itemTotal = item.qty * item.price;
            total += itemTotal;

            html += `
                <div class="food-item">
                    <span>${item.name}</span>
                    <span>${item.qty} x ${item.price.toLocaleString('vi-VN')}đ</span>
                </div>
            `;
        });

        html += `
            <hr />
            <div class="food-item fw-bold">
                <span>Tổng cộng</span>
                <span>${total.toLocaleString('vi-VN')}đ</span>
            </div>
        `;

        foodListContainer.innerHTML = html;
    });

    function placeOrder() {
        // Mở popup QR thanh toán thay vì đặt hàng ngay
        showQRPaymentModal();
    }
    
    function showQRPaymentModal() {
        // Lấy thông tin giỏ hàng và tính tổng tiền
        const cart = JSON.parse(sessionStorage.getItem('cashierCart') || '[]');
        const selectedTable = JSON.parse(localStorage.getItem('selectedTable') || '{}');
        
        let total = 0;
        cart.forEach(item => {
            total += item.qty * item.price;
        });
        if(total == 0){
            window.location.href = "/Cashier/TableManagement";
        }
        // Tạo mã đơn hàng (giả lập)
        const orderId = 'ORD' + Date.now().toString().substr(-8).toUpperCase();
        
        // Cập nhật thông tin thanh toán
        document.getElementById('payment-amount').textContent = total.toLocaleString('vi-VN') + 'đ';
        document.getElementById('payment-order-id').textContent = orderId;
        
        // Tạo URL QR Code với thông tin động
        const qrUrl = `https://img.vietqr.io/image/970422-36888888838688-compact2.jpg?amount=${total}&addInfo=${orderId}&accountName=Phan Quoc Khanh`;
        document.getElementById('qr-code-image').src = qrUrl;
        
        // Hiển thị modal
        var qrModal = new bootstrap.Modal(document.getElementById('qrPaymentModal'));
        qrModal.show();
    }
    
    function closeQRModal() {
        var qrModal = bootstrap.Modal.getInstance(document.getElementById('qrPaymentModal'));
        if (qrModal) {
            qrModal.hide();
        }
    }
    var isCheck = false;
    async function confirmPayment() {
        if(isCheck == true){
            alert('Đơn hàng đã được thanh toán');
            window.location.href = "/Cashier/TableManagement";
        }
        try {
            // Get authentication token
            const token = localStorage.getItem('access_token');
            if (!token) {
                alert('Vui lòng đăng nhập lại');
                window.location.href = '/auth/login';
                return;
            }

            // Get cart and table information
            const cart = JSON.parse(sessionStorage.getItem('cashierCart') || '[]');
            const selectedTable = JSON.parse(localStorage.getItem('selectedTable') || '{}');

            if (!cart.length) {
                alert('Giỏ hàng trống!');
                return;
            }

            if (!selectedTable.tableNumber) {
                alert('Vui lòng chọn bàn!');
                return;
            }

            // Prepare order items
            const orderItems = cart.map(item => ({
                menuItemId: item.id,
                quantity: item.qty,
                note: item.note || ''
            }));

            // Prepare order request
            const orderRequest = {
                tableNumber: selectedTable.tableNumber,
                items: orderItems,
                note: '', // Can add overall order note if needed
                customerName: '', // Can be added later if needed
                customerPhone: '' // Can be added later if needed
            };

            // Show loading state
            const confirmBtn = document.querySelector('button[onclick="confirmPayment()"]');
            const originalText = confirmBtn.innerHTML;
            confirmBtn.innerHTML = '<i class="spinner-border spinner-border-sm me-2"></i>Đang xử lý...';
            confirmBtn.disabled = true;

            // Call API to create order
            const response = await fetch('/api/CartV2/create-order-by-table', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify(orderRequest)
            });

            const result = await response.json();

            // Reset button state
            confirmBtn.innerHTML = originalText;
            confirmBtn.disabled = false;

            if (response.ok && result.status === 'Success') {
                // Success - close QR modal and show success
                closeQRModal();
                
                // Delay ngắn để modal QR đóng hoàn toàn trước khi mở modal thành công
                setTimeout(() => {
                    showSuccessPopup();
                    // Xoá giỏ hàng sau khi đặt hàng thành công
                    sessionStorage.removeItem('cashierCart');
                    localStorage.removeItem('selectedTable');
                }, 300);
            } else {
                // Error
                alert(result.message || 'Có lỗi xảy ra khi tạo đơn hàng. Vui lòng thử lại.');
            }

        } catch (error) {
            console.error('Error creating order:', error);
            alert('Có lỗi xảy ra khi tạo đơn hàng. Vui lòng kiểm tra kết nối mạng và thử lại.');
            
            // Reset button state
            const confirmBtn = document.querySelector('button[onclick="confirmPayment()"]');
            confirmBtn.innerHTML = '<i class="bi bi-check-circle me-1"></i>Xác nhận đã thanh toán';
            confirmBtn.disabled = false;
        }
    }
     function logout() {
            // Xóa tất cả thông tin session và localStorage
            localStorage.removeItem("access_token");
            localStorage.removeItem("shoppingCart");
            sessionStorage.clear();
            window.location.href = "/auth/login";
        }

        function trangchu() {
            window.location.href = "/Cashier/TableManagement";
        }
</script>